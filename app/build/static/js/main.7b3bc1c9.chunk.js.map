{"version":3,"sources":["components/servo.js","components/zone.js","app.js","serviceWorker.js","index.js"],"names":["Servo","props","state","angle","handleChange","bind","handleEmit","undefined","this","socket","emit","id","servo","value","zone","event","setState","target","className","name","type","min","max","onChange","step","onMouseUp","onKeyDown","onClick","handleDelete","Component","Zone","servos","JSON","parse","localStorage","getItem","servoId","servoAngle","errorMessage","handleInputChange","handleNewServo","checked","servoExists","map","push","setItem","stringify","filter","console","log","htmlFor","key","App","endpoint","zoneId","zoneName","zones","handleAdd","zoneExists","deletedZone","removeItem","SocketIO","connect","on","data","err","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7b3bc1c9.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nimport './styles/servo.css'\n\nexport default class Servo extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tangle: this.props.angle\n\t\t}\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleEmit = this.handleEmit.bind(this)\n\t}\n\tcomponentDidMount() {\n\t\tif (this.props.socket !== undefined) {\n\t\t\tthis.props.socket.emit('move', { id: this.props.servo, value: this.state.angle, zone: this.props.zone })\n\t\t}\n\t}\n\thandleChange(event) {\n\t\tthis.setState({ angle: event.target.value })\n\t}\n\thandleEmit() {\n\t\tif (this.props.socket !== undefined) {\n\t\t\tthis.props.socket.emit('move', { id: this.props.servo, value: this.state.angle, zone: this.props.zone })\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"servo-container\">\n\t\t\t\t{this.props.name !== undefined ? (\n\t\t\t\t\t<h1>{this.props.name}</h1>\n\t\t\t\t) : (\n\t\t\t\t\t<h1>Channel {this.props.servo}</h1>\n\t\t\t\t)}\n\t\t\t\t<h3>{this.state.angle}Â°</h3>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tmax=\"180\"\n\t\t\t\t\tvalue={this.state.angle}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tstep=\"1\"\n\t\t\t\t\tonMouseUp={this.handleEmit}\n\t\t\t\t\tonKeyDown={this.handleEmit}\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tclassName=\"delete-button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.handleDelete(this.props.servo)\n\t\t\t\t\t}}>\n\t\t\t\t\tDelete\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport Servo from './servo'\n\nimport './styles/zone.css'\n\nexport default class Zone extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tname: this.props.name,\n\t\t\tservos: JSON.parse(localStorage.getItem(this.props.zone.id)) || [],\n\t\t\tsocket: undefined,\n\t\t\tservoId: 0,\n\t\t\tservoAngle: 0,\n\t\t\terrorMessage: undefined\n\t\t}\n\n\t\tthis.handleInputChange = this.handleInputChange.bind(this)\n\t\tthis.handleNewServo = this.handleNewServo.bind(this)\n\t\tthis.handleDelete = this.handleDelete.bind(this)\n\t}\n\thandleInputChange(event) {\n\t\tconst target = event.target\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value\n\t\tconst name = target.name\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\thandleNewServo() {\n\t\tlet servos = this.state.servos\n\t\tlet servoExists = false\n\n\t\tservos.map((servo) => {\n\t\t\tif (servo.id === this.state.servoId) {\n\t\t\t\tservoExists = true\n\t\t\t}\n\t\t})\n\n\t\tif (servoExists === false) {\n\t\t\tservos.push({ id: this.state.servoId, angle: this.state.servoAngle })\n\n\t\t\tthis.setState({\n\t\t\t\tservos: servos,\n\t\t\t\terrorMessage: undefined\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terrorMessage: 'Servo channel is already in use.'\n\t\t\t})\n\t\t}\n\n\t\tlocalStorage.setItem(this.props.zone.id, JSON.stringify(servos))\n\t}\n\thandleDelete(id) {\n\t\tlet servos = this.state.servos\n\n\t\tservos = servos.filter((servo) => {\n\t\t\treturn servo.id !== id\n\t\t})\n\n\t\tthis.setState({\n\t\t\tservos: servos\n\t\t})\n\n\t\tconsole.log(servos)\n\n\t\tlocalStorage.setItem(this.props.zone.id, JSON.stringify(servos))\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"zone\">\n\t\t\t\t\t<h1>{`ID: ${this.props.zone.id} - ${this.props.zone.name}`}</h1>\n\t\t\t\t\t{this.state.errorMessage !== undefined && (\n\t\t\t\t\t\t<p className=\"error-message\">{this.state.errorMessage}</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"servo-container servo-form-container\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label htmlFor=\"servoId\">Channel</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tid=\"servoId\"\n\t\t\t\t\t\t\t\t\tname=\"servoId\"\n\t\t\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.servoId}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label htmlFor=\"servoValue\">Initial Angle</label>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\tid=\"servoAngle\"\n\t\t\t\t\t\t\t\t\tname=\"servoAngle\"\n\t\t\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\t\t\tmax={180}\n\t\t\t\t\t\t\t\t\tvalue={this.state.servoAngle}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInputChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<button className=\"add-button\" onClick={this.handleNewServo}>Add Servo</button>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tclassName=\"delete-button\"\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tthis.props.handleDelete(this.props.zone.id)\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{this.state.servos.map((value) => (\n\t\t\t\t\t\t\t<Servo\n\t\t\t\t\t\t\t\tkey={value.id}\n\t\t\t\t\t\t\t\tzone={this.props.zone}\n\t\t\t\t\t\t\t\tservo={value.id}\n\t\t\t\t\t\t\t\tangle={value.angle}\n\t\t\t\t\t\t\t\tsocket={this.props.socket}\n\t\t\t\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport Zone from './components/zone'\nimport SocketIO from 'socket.io-client'\n\nexport default class App extends React.Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\tendpoint: 'http://34.95.47.109:8080',\n\t\t\tsocket: undefined,\n\t\t\tzoneId: '',\n\t\t\tzoneName: '',\n\t\t\terrorMessage: undefined,\n\t\t\tzones: JSON.parse(localStorage.getItem('zones')) || []\n\t\t}\n\n\t\tthis.handleChange = this.handleChange.bind(this)\n\t\tthis.handleAdd = this.handleAdd.bind(this)\n\t\tthis.handleDelete = this.handleDelete.bind(this)\n\t}\n\thandleAdd(id) {\n\t\tlet zones = this.state.zones\n\t\tlet zoneExists = false\n\n\t\tzones.map((zone) => {\n\t\t\tif (zone.id === this.state.zoneId) {\n\t\t\t\tzoneExists = true\n\t\t\t}\n\t\t})\n\n\t\tif (zoneExists === false) {\n\t\t\tzones.push({ id: id || this.state.zoneId, name: id || this.state.zoneName })\n\n\t\t\tthis.setState({\n\t\t\t\tzones: zones,\n\t\t\t\terrorMessage: undefined\n\t\t\t})\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\terrorMessage: 'Zone already exists.'\n\t\t\t})\n\t\t}\n\n\t\tlocalStorage.setItem('zones', JSON.stringify(zones))\n\t}\n\thandleChange(event) {\n\t\tconst target = event.target\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value\n\t\tconst name = target.name\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\thandleDelete(id) {\n\t\tlet zones = this.state.zones\n\t\tlet deletedZone = null\n\n\t\tdeletedZone = zones.filter((zone) => zone.id === id)\n\n\t\tconsole.log(deletedZone)\n\n\t\tzones = zones.filter((zone) => {\n\t\t\treturn zone.id !== id\n\t\t})\n\n\t\tthis.setState({\n\t\t\tzones: zones\n\t\t})\n\n\t\tlocalStorage.removeItem(id)\n\t\tlocalStorage.setItem('zones', JSON.stringify(zones))\n\t}\n\tcomponentDidMount() {\n\t\tlet socket = SocketIO(this.state.endpoint).connect()\n\n\t\tsocket.on('new zone', (data, err) => {\n\t\t\tif (!err) {\n\t\t\t\tthis.handleAdd(data.id)\n\t\t\t}\n\t\t})\n\n\t\tsocket.on('delete zone', (data, err) => {\n\t\t\tconsole.log(data)\n\t\t\tif (!err) {\n\t\t\t\tthis.handleDelete(data.id)\n\t\t\t}\n\t\t})\n\n\t\tthis.setState({\n\t\t\tsocket: socket\n\t\t})\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"zoneId\">Zone ID</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"zoneId\"\n\t\t\t\t\t\t\tname=\"zoneId\"\n\t\t\t\t\t\t\tvalue={this.state.zoneId}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-group\">\n\t\t\t\t\t\t<label htmlFor=\"zoneName\">Zone name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tid=\"zoneName\"\n\t\t\t\t\t\t\tname=\"zoneName\"\n\t\t\t\t\t\t\tvalue={this.state.zoneName}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"add-button\" onClick={this.handleAdd}>\n\t\t\t\t\t\tAdd zone\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{this.state.errorMessage !== undefined && (\n\t\t\t\t\t<p className=\"error-message\">{this.state.errorMessage}</p>\n\t\t\t\t)}\n\t\t\t\t{this.state.zones.map((zone) => (\n\t\t\t\t\t<Zone\n\t\t\t\t\t\tkey={zone.id}\n\t\t\t\t\t\tsocket={this.state.socket}\n\t\t\t\t\t\tzone={zone}\n\t\t\t\t\t\thandleDelete={this.handleDelete}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</>\n\t\t)\n\t}\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' }\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log('No internet connection found. App is running in offline mode.')\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './app'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}